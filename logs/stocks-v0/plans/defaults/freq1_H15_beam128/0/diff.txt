diff --git a/Trajectory_Transformer/scripts/plan.py b/Trajectory_Transformer/scripts/plan.py
index f06654a..04a6f48 100644
--- a/Trajectory_Transformer/scripts/plan.py
+++ b/Trajectory_Transformer/scripts/plan.py
@@ -18,9 +18,11 @@ from trajectory.search import (
     extract_actions,
     update_context,
 )
+os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
+os.environ["CUDA_VISIBLE_DEVICES"] = '2'
 
 class Parser(utils.Parser):
-    dataset: str = 'forex-v0'
+    dataset: str = 'stocks-v0'
     config: str = 'config.offline'
 
 #######################
diff --git a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
index f42cef8..0e84897 100644
--- a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
+++ b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
@@ -1,23 +1,23 @@
 {
     "add_extras": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaB6GlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaDKGlFKULg=="
     },
     "beam_width": 128,
     "cdf_act": 0.6,
     "cdf_obs": null,
-    "commit": "205f6b61ecea62a899bd494faab1459a62ea5525 main",
+    "commit": "16f212f01059ed68ee337318ecfc4a57d31bdca4 main",
     "config": "config.offline",
     "dataset": "forex-v0",
     "device": "cuda",
     "exp_name": "plans/defaults/freq1_H15_beam128",
     "generate_exp_name": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaCqGlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaBSGlFKULg=="
     },
     "get_commit": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaDGGlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaDWGlFKULg=="
     },
     "gpt_epoch": "latest",
     "gpt_loadpath": "gpt/azure",
@@ -28,7 +28,7 @@
     "max_context_transitions": 5,
     "mkdir": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaD6GlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaC+GlFKULg=="
     },
     "n_expand": 2,
     "percentile": "mean",
@@ -37,24 +37,24 @@
     "prefix_context": true,
     "read_config": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaDSGlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaD6GlFKULg=="
     },
     "renderer": "Renderer",
     "reproducibility": {
         "command_line": "python /home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading/Trajectory_Transformer/scripts/plan.py",
         "git_has_uncommitted_changes": true,
         "git_root": "/home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading",
-        "git_url": "https://github.com/KJLdefeated/RL_for_Quatitatitive_Trading/tree/205f6b61ecea62a899bd494faab1459a62ea5525",
-        "time": "Sun May 14 00:30:59 2023"
+        "git_url": "https://github.com/KJLdefeated/RL_for_Quatitatitive_Trading/tree/16f212f01059ed68ee337318ecfc4a57d31bdca4",
+        "time": "Tue May 16 00:22:08 2023"
     },
     "save_diff": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaBaGlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaCeGlFKULg=="
     },
     "savepath": "logs/forex-v0/plans/defaults/freq1_H15_beam128/0",
     "set_seed": {
         "_type": "python_object (type = method)",
-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaA+GlFKULg=="
+        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaCSGlFKULg=="
     },
     "suffix": "0",
     "verbose": true,
diff --git a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/diff.txt b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/diff.txt
index 6c69f6b..c30ee70 100644
--- a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/diff.txt
+++ b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/diff.txt
@@ -1,244 +1,71 @@
-diff --git a/Trajectory_Transformer/config/offline.py b/Trajectory_Transformer/config/offline.py
-index 1dd7eb6..98c4875 100644
---- a/Trajectory_Transformer/config/offline.py
-+++ b/Trajectory_Transformer/config/offline.py
-@@ -17,7 +17,7 @@ args_to_watch = [
- base = {
- 
-     'train': {
--        'N': 100,
-+        'N': 20,
-         'discount': 0.99,
-         'n_layer': 4,
-         'n_head': 4,
-diff --git a/Trajectory_Transformer/scripts/plan.py b/Trajectory_Transformer/scripts/plan.py
-index 881688c..f06654a 100644
---- a/Trajectory_Transformer/scripts/plan.py
-+++ b/Trajectory_Transformer/scripts/plan.py
-@@ -1,10 +1,15 @@
- import json
- import pdb
-+import os
-+import sys
- from os.path import join
- import gym
- import gym_anytrading
-+import numpy as np
- from gym_anytrading.envs import TradingEnv, ForexEnv, StocksEnv, Actions, Positions 
- from gym_anytrading.datasets import FOREX_EURUSD_1H_ASK, STOCKS_GOOGL
-+parent_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
-+sys.path.insert(0, parent_dir)
- import trajectory.utils as utils
- import trajectory.datasets as datasets
- from trajectory.search import (
-@@ -39,7 +44,7 @@ gpt, gpt_epoch = utils.load_model(args.logbase, args.dataset, args.gpt_loadpath,
- #######################
- 
- env = gym.make(args.dataset, frame_bound=(50, 100), window_size=10)
--renderer = utils.make_renderer(args)
-+#renderer = utils.make_renderer(args)
- timer = utils.timer.Timer()
- 
- discretizer = dataset.discretizer
-@@ -48,7 +53,7 @@ observation_dim = dataset.observation_dim
- action_dim = dataset.action_dim
- 
- value_fn = lambda x: discretizer.value_fn(x, args.percentile)
--preprocess_fn = datasets.get_preprocess_fn(env.name)
-+#preprocess_fn = datasets.get_preprocess_fn(env.name)
- 
- #######################
- ###### main loop ######
-@@ -63,10 +68,11 @@ rollout = [observation.copy()]
- ## previous (tokenized) transitions for conditioning transformer
- context = []
- 
--T = env.max_episode_steps
-+T = 1000000
- for t in range(T):
- 
--    observation = preprocess_fn(observation)
-+    #observation = preprocess_fn(observation)
-+    observation = observation.reshape(-1)
- 
-     if t % args.plan_freq == 0:
-         ## concatenate previous transitions and current observations to input to model
-@@ -90,18 +96,18 @@ for t in range(T):
-     action = extract_actions(sequence_recon, observation_dim, action_dim, t=0)
- 
-     ## execute action in environment
--    next_observation, reward, terminal, _ = env.step(action)
-+    next_observation, reward, terminal, info = env.step(np.argmax(action))
- 
-     ## update return
-     total_reward += reward
--    score = env.get_normalized_score(total_reward)
-+    #score = env.get_normalized_score(total_reward)
- 
-     ## update rollout observations and context transitions
-     rollout.append(next_observation.copy())
-     context = update_context(context, discretizer, observation, action, reward, args.max_context_transitions)
- 
-     print(
--        f'[ plan ] t: {t} / {T} | r: {reward:.2f} | R: {total_reward:.2f} | score: {score:.4f} | '
-+        f'[ plan ] t: {t} / {T} | r: {reward:.2f} | R: {total_reward:.2f} '
-         f'time: {timer():.2f} | {args.dataset} | {args.exp_name} | {args.suffix}\n'
-     )
- 
-@@ -114,11 +120,13 @@ for t in range(T):
-     #    ## save rollout thus far
-     #    renderer.render_rollout(join(args.savepath, f'rollout.mp4'), rollout, fps=80)
- 
--    if terminal: break
-+    if terminal: 
-+        print(info)
-+        break
- 
-     observation = next_observation
- 
- ## save result as a json file
- json_path = join(args.savepath, 'rollout.json')
--json_data = {'score': score, 'step': t, 'return': total_reward, 'term': terminal, 'gpt_epoch': gpt_epoch}
-+json_data = {'step': t, 'return': total_reward, 'term': terminal, 'gpt_epoch': gpt_epoch}
- json.dump(json_data, open(json_path, 'w'), indent=2, sort_keys=True)
-diff --git a/Trajectory_Transformer/scripts/train.py b/Trajectory_Transformer/scripts/train.py
-index ddcda7a..9a2273b 100644
---- a/Trajectory_Transformer/scripts/train.py
-+++ b/Trajectory_Transformer/scripts/train.py
-@@ -2,11 +2,17 @@ import os
- import numpy as np
- import torch
- import pdb
-+import sys
-+
-+parent_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
-+sys.path.insert(0, parent_dir)
- 
- import trajectory.utils as utils
- import trajectory.datasets as datasets
- from trajectory.models.transformers import GPT
- 
-+os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
-+os.environ["CUDA_VISIBLE_DEVICES"] = '2'
- 
- class Parser(utils.Parser):
-     dataset: str = 'forex-v0'
-@@ -31,7 +37,7 @@ dataset_config = utils.Config(
-     savepath=(args.savepath, 'data_config.pkl'),
-     env=args.dataset,
-     N=args.N,
--    penalty=args.termination_penalty,
-+    penalty=None,
-     sequence_length=sequence_length,
-     step=args.step,
-     discount=args.discount,
-@@ -104,7 +110,8 @@ trainer = trainer_config()
- #######################
- 
- ## scale number of epochs to keep number of updates constant
--n_epochs = int(1e6 / len(dataset) * args.n_epochs_ref)
-+#n_epochs = int(1e6 / len(dataset) * args.n_epochs_ref)
-+n_epochs = 3000
- save_freq = int(n_epochs // args.n_saves)
- 
- for epoch in range(n_epochs):
-diff --git a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_random.pkl b/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_random.pkl
-deleted file mode 100644
-index fa97c75..0000000
-Binary files a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_random.pkl and /dev/null differ
-diff --git a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-index 71bfb7e..bbd08e4 100644
---- a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-+++ b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-@@ -13,7 +13,7 @@ env = gym.make('forex-v0', frame_bound=(50, 100), window_size=10)
- action_dim = env.action_space.n
- 
- episode = 10
--
-+T = 0
- episode_data = {}
- for k in ['observations', 'next_observations', 'actions', 'rewards', 'terminals']:
-     episode_data[k] = []
-@@ -25,13 +25,12 @@ for _ in range(episode):
-         episode_data['observations'].append(observation.reshape(-1).astype('float32'))
-         episode_data['next_observations'].append(next_observation.reshape(-1).astype('float32'))
-         episode_data['actions'].append(action)
--        episode_data['rewards'].append(np.array(reward).astype('float32'))
-+        episode_data['rewards'].append(np.array([reward]).astype('float32'))
-         episode_data['terminals'].append(done)
-         if done:
-             break
- 
- for k in ['observations', 'next_observations', 'actions', 'rewards', 'terminals']:
-     episode_data[k] = np.stack(episode_data[k])
--
--with open('trajectory-transformer/trajectory/datasets/Random/{}_'.format(quat_type) + '_random.pkl', 'wb') as f:
-+with open('/home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading/Trajectory_Transformer/trajectory/datasets/Random/{}_r'.format(quat_type) + '.pkl', 'wb') as f:
-     pickle.dump(episode_data, f)
-\ No newline at end of file
-diff --git a/Trajectory_Transformer/trajectory/datasets/__init__.py b/Trajectory_Transformer/trajectory/datasets/__init__.py
-index 69ee58d..d1062c5 100644
---- a/Trajectory_Transformer/trajectory/datasets/__init__.py
-+++ b/Trajectory_Transformer/trajectory/datasets/__init__.py
-@@ -1,3 +1,3 @@
--from .d4rl import load_environment
-+#from .d4rl import load_environment
- from .sequence import *
- from .preprocessing import get_preprocess_fn
-diff --git a/Trajectory_Transformer/trajectory/datasets/sequence.py b/Trajectory_Transformer/trajectory/datasets/sequence.py
-index c23b4f3..4525194 100644
---- a/Trajectory_Transformer/trajectory/datasets/sequence.py
-+++ b/Trajectory_Transformer/trajectory/datasets/sequence.py
-@@ -53,7 +53,7 @@ class SequenceDataset(torch.utils.data.Dataset):
-         self.device = device
-         
-         print(f'[ datasets/sequence ] Loading...', end=' ', flush=True)
--        with open('trajectory-transformer/trajectory/datasets/Random'+env+'.pkl', 'rb') as f:
-+        with open('Trajectory_Transformer/trajectory/datasets/Random/'+env+'.pkl', 'rb') as f:
-             dataset = pickle.load(f)
-         print('✓')
- 
-@@ -69,7 +69,6 @@ class SequenceDataset(torch.utils.data.Dataset):
-         terminals = dataset['terminals']
-         realterminals = [False]*len(dataset['terminals'])
- 
--        #observations = np.reshape(observations, (100, 7000))
-         self.observations_raw = observations
-         self.actions_raw = actions
-         self.next_observations_raw = next_observations
-diff --git a/Trajectory_Transformer/trajectory/utils/__init__.py b/Trajectory_Transformer/trajectory/utils/__init__.py
-index 7c596c3..7529384 100644
---- a/Trajectory_Transformer/trajectory/utils/__init__.py
-+++ b/Trajectory_Transformer/trajectory/utils/__init__.py
-@@ -2,7 +2,7 @@ from .setup import Parser, watch
- from .arrays import *
- from .serialization import *
- from .progress import Progress, Silent
--from .rendering import make_renderer
-+#from .rendering import make_renderer
- # from .video import *
- from .config import Config
- from .training import Trainer
-diff --git a/requirements.txt b/requirements.txt
-index ece16ed..a579177 100644
---- a/requirements.txt
-+++ b/requirements.txt
-@@ -1,14 +1,16 @@
- numpy
- gym
- numpy
--torch
-+pytorch==1.12.1
-+torchvision==0.13.1 
-+torchaudio==0.12.1
- transformers==4.5.1
- wandb==0.9.1
- tensorboard
- pyprind
- tensorflow
- gin-config
--gym
-+gym==0.21.0
- tqdm
- blosc
- git+https://github.com/google/dopamine.git
\ No newline at end of file
+diff --git a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
+index f42cef8..0e84897 100644
+--- a/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
++++ b/logs/forex-v0/plans/defaults/freq1_H15_beam128/0/args.json
+@@ -1,23 +1,23 @@
+ {
+     "add_extras": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaB6GlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaDKGlFKULg=="
+     },
+     "beam_width": 128,
+     "cdf_act": 0.6,
+     "cdf_obs": null,
+-    "commit": "205f6b61ecea62a899bd494faab1459a62ea5525 main",
++    "commit": "16f212f01059ed68ee337318ecfc4a57d31bdca4 main",
+     "config": "config.offline",
+     "dataset": "forex-v0",
+     "device": "cuda",
+     "exp_name": "plans/defaults/freq1_H15_beam128",
+     "generate_exp_name": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaCqGlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaBSGlFKULg=="
+     },
+     "get_commit": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaDGGlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaDWGlFKULg=="
+     },
+     "gpt_epoch": "latest",
+     "gpt_loadpath": "gpt/azure",
+@@ -28,7 +28,7 @@
+     "max_context_transitions": 5,
+     "mkdir": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaD6GlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaC+GlFKULg=="
+     },
+     "n_expand": 2,
+     "percentile": "mean",
+@@ -37,24 +37,24 @@
+     "prefix_context": true,
+     "read_config": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaDSGlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaD6GlFKULg=="
+     },
+     "renderer": "Renderer",
+     "reproducibility": {
+         "command_line": "python /home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading/Trajectory_Transformer/scripts/plan.py",
+         "git_has_uncommitted_changes": true,
+         "git_root": "/home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading",
+-        "git_url": "https://github.com/KJLdefeated/RL_for_Quatitatitive_Trading/tree/205f6b61ecea62a899bd494faab1459a62ea5525",
+-        "time": "Sun May 14 00:30:59 2023"
++        "git_url": "https://github.com/KJLdefeated/RL_for_Quatitatitive_Trading/tree/16f212f01059ed68ee337318ecfc4a57d31bdca4",
++        "time": "Tue May 16 00:22:08 2023"
+     },
+     "save_diff": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaBaGlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaCeGlFKULg=="
+     },
+     "savepath": "logs/forex-v0/plans/defaults/freq1_H15_beam128/0",
+     "set_seed": {
+         "_type": "python_object (type = method)",
+-        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMB2hvcml6b26USw+MB3ZlcmJvc2WUiIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB2NkZl9hY3SURz/jMzMzMzMzjApwZXJjZW50aWxllIwEbWVhbpSMCHNldF9zZWVklGgCaAZoD4aUUpSMCHZpc19mcmVxlEsyjAdjZGZfb2JzlE6MBmNvbW1pdJSMLTIwNWY2YjYxZWNlYTYyYTg5OWJkNDk0ZmFhYjE0NTlhNjJlYTU1MjUgbWFpbpSMCXNhdmVfZGlmZpRoAmgGaBaGlFKUjAZzdWZmaXiUjAEwlIwJcGxhbl9mcmVxlEsBjA5wcmVmaXhfY29udGV4dJSIjApiZWFtX3dpZHRolEuAjAphZGRfZXh0cmFzlGgCaAZoHoaUUpSMB2RhdGFzZXSUjAhmb3JleC12MJSMCGV4cF9uYW1llIwgcGxhbnMvZGVmYXVsdHMvZnJlcTFfSDE1X2JlYW0xMjiUjAhuX2V4cGFuZJRLAowGcHJlZml4lIwPcGxhbnMvZGVmYXVsdHMvlIwFa19vYnOUSwGMF21heF9jb250ZXh0X3RyYW5zaXRpb25zlEsFjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaCqGlFKUjAZkZXZpY2WUjARjdWRhlIwMZ3B0X2xvYWRwYXRolIwJZ3B0L2F6dXJllIwKZ2V0X2NvbW1pdJRoAmgGaDGGlFKUjAtyZWFkX2NvbmZpZ5RoAmgGaDSGlFKUjAVrX2FjdJROjAlncHRfZXBvY2iUjAZsYXRlc3SUjAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMB2xvZ2Jhc2WUjAVsb2dzL5SMBW1rZGlylGgCaAZoPoaUUpSMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlHViaA+GlFKULg=="
++        "_value": "gASVAgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMDnByZWZpeF9jb250ZXh0lIiMBWtfb2JzlEsBjAlncHRfZXBvY2iUjAZsYXRlc3SUjAVrX2FjdJROjAdsb2diYXNllIwFbG9ncy+UjAh2aXNfZnJlcZRLMowXbWF4X2NvbnRleHRfdHJhbnNpdGlvbnOUSwWMBmNvbW1pdJSMLTE2ZjIxMmYwMTA1OWVkNjhlZTMzNzMxOGVjZmM0YTU3ZDMxYmRjYTQgbWFpbpSMCmJlYW1fd2lkdGiUS4CMEWdlbmVyYXRlX2V4cF9uYW1llGgCaAZoFIaUUpSMDGdwdF9sb2FkcGF0aJSMCWdwdC9henVyZZSMCnBlcmNlbnRpbGWUjARtZWFulIwIcmVuZGVyZXKUjAhSZW5kZXJlcpSMB3ZlcmJvc2WUiIwIZXhwX25hbWWUjCBwbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOJSMBnByZWZpeJSMD3BsYW5zL2RlZmF1bHRzL5SMCHNhdmVwYXRolIwwbG9ncy9mb3JleC12MC9wbGFucy9kZWZhdWx0cy9mcmVxMV9IMTVfYmVhbTEyOC8wlIwIc2V0X3NlZWSUaAJoBmgkhpRSlIwJc2F2ZV9kaWZmlGgCaAZoJ4aUUpSMBmNvbmZpZ5SMDmNvbmZpZy5vZmZsaW5llIwJcGxhbl9mcmVxlEsBjAZzdWZmaXiUjAEwlIwFbWtkaXKUaAJoBmgvhpRSlIwKYWRkX2V4dHJhc5RoAmgGaDKGlFKUjApnZXRfY29tbWl0lGgCaAZoNYaUUpSMB2NkZl9vYnOUTowHY2RmX2FjdJRHP+MzMzMzMzOMB2hvcml6b26USw+MBmRldmljZZSMBGN1ZGGUjAhuX2V4cGFuZJRLAowLcmVhZF9jb25maWeUaAJoBmg+hpRSlIwHZGF0YXNldJSMCGZvcmV4LXYwlHViaCSGlFKULg=="
+     },
+     "suffix": "0",
+     "verbose": true,
\ No newline at end of file
diff --git a/logs/stocks-v0_r/gpt/azure/args.json b/logs/stocks-v0_r/gpt/azure/args.json
deleted file mode 100644
index 59fc81f..0000000
--- a/logs/stocks-v0_r/gpt/azure/args.json
+++ /dev/null
@@ -1,65 +0,0 @@
-{
-    "N": 20,
-    "action_weight": 5,
-    "add_extras": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1Ymg6hpRSlC4="
-    },
-    "attn_pdrop": 0.1,
-    "batch_size": 64,
-    "commit": "0087b0f25f1751605a875ea673eb0304703b47fe main",
-    "config": "config.offline",
-    "dataset": "stocks-v0_r",
-    "device": "cuda",
-    "discount": 0.99,
-    "discretizer": "QuantileDiscretizer",
-    "embd_pdrop": 0.1,
-    "exp_name": "gpt/azure",
-    "generate_exp_name": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgVhpRSlC4="
-    },
-    "get_commit": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgKhpRSlC4="
-    },
-    "learning_rate": 0.0006,
-    "logbase": "logs/",
-    "lr_decay": true,
-    "mkdir": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgZhpRSlC4="
-    },
-    "n_embd": 32,
-    "n_epochs_ref": 50,
-    "n_head": 4,
-    "n_layer": 4,
-    "n_saves": 3,
-    "read_config": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgdhpRSlC4="
-    },
-    "reproducibility": {
-        "command_line": "python /home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading/Trajectory_Transformer/scripts/train.py",
-        "git_has_uncommitted_changes": true,
-        "git_root": "/home/kjlin0508/Course_work/AI_Intro/RL_for_Quatitatitive_Trading",
-        "git_url": "https://github.com/KJLdefeated/RL_for_Quatitatitive_Trading/tree/0087b0f25f1751605a875ea673eb0304703b47fe",
-        "time": "Mon May 15 17:39:32 2023"
-    },
-    "resid_pdrop": 0.1,
-    "reward_weight": 1,
-    "save_diff": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgphpRSlC4="
-    },
-    "savepath": "logs/stocks-v0_r/gpt/azure",
-    "seed": 42,
-    "set_seed": {
-        "_type": "python_object (type = method)",
-        "_value": "gASVHgMAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwIX19tYWluX1+UjAZQYXJzZXKUk5QpgZR9lCiMBHNlZWSUSyqMDHZhbHVlX3dlaWdodJRLAYwKZ2V0X2NvbW1pdJRoAmgGaAqGlFKUjBN0ZXJtaW5hdGlvbl9wZW5hbHR5lEqc////jAZjb25maWeUjA5jb25maWcub2ZmbGluZZSMCGxyX2RlY2F5lIiMCmF0dG5fcGRyb3CURz+5mZmZmZmajAFOlEsUjAdkYXRhc2V0lIwLc3RvY2tzLXYwX3KUjBFnZW5lcmF0ZV9leHBfbmFtZZRoAmgGaBWGlFKUjAZuX2VtYmSUSyCMBW1rZGlylGgCaAZoGYaUUpSMDXJld2FyZF93ZWlnaHSUSwGMC3JlYWRfY29uZmlnlGgCaAZoHYaUUpSMCHNldF9zZWVklGgCaAZoIIaUUpSMCmVtYmRfcGRyb3CURz+5mZmZmZmajAZkZXZpY2WUjARjdWRhlIwNYWN0aW9uX3dlaWdodJRLBYwLZGlzY3JldGl6ZXKUjBNRdWFudGlsZURpc2NyZXRpemVylIwJc2F2ZV9kaWZmlGgCaAZoKYaUUpSMBmNvbW1pdJSMLTAwODdiMGYyNWYxNzUxNjA1YTg3NWVhNjczZWIwMzA0NzAzYjQ3ZmUgbWFpbpSMBHN0ZXCUSwGMDWxlYXJuaW5nX3JhdGWURz9DqSowVTJhjBpzdWJzYW1wbGVkX3NlcXVlbmNlX2xlbmd0aJRLCowHbl9sYXllcpRLBIwIc2F2ZXBhdGiUjBpsb2dzL3N0b2Nrcy12MF9yL2dwdC9henVyZZSMDG5fZXBvY2hzX3JlZpRLMowIZGlzY291bnSURz/vrhR64UeujApiYXRjaF9zaXpllEtAjAhleHBfbmFtZZSMCWdwdC9henVyZZSMB25fc2F2ZXOUSwOMCmFkZF9leHRyYXOUaAJoBmg6hpRSlIwHbG9nYmFzZZSMBWxvZ3MvlIwLcmVzaWRfcGRyb3CURz+5mZmZmZmajAZuX2hlYWSUSwR1YmgghpRSlC4="
-    },
-    "step": 1,
-    "subsampled_sequence_length": 10,
-    "termination_penalty": -100,
-    "value_weight": 1
-}
\ No newline at end of file
diff --git a/logs/stocks-v0_r/gpt/azure/data_config.pkl b/logs/stocks-v0_r/gpt/azure/data_config.pkl
deleted file mode 100644
index f2b7eea..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/data_config.pkl and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/diff.txt b/logs/stocks-v0_r/gpt/azure/diff.txt
deleted file mode 100644
index 7d861b1..0000000
--- a/logs/stocks-v0_r/gpt/azure/diff.txt
+++ /dev/null
@@ -1,59 +0,0 @@
-diff --git a/Trajectory_Transformer/config/offline.py b/Trajectory_Transformer/config/offline.py
-index 98c4875..9a7a974 100644
---- a/Trajectory_Transformer/config/offline.py
-+++ b/Trajectory_Transformer/config/offline.py
-@@ -29,7 +29,7 @@ base = {
-         'device': 'cuda',
- 
-         'n_embd': 32,
--        'batch_size': 256,
-+        'batch_size': 64,
-         'learning_rate': 6e-4,
-         'lr_decay': True,
-         'seed': 42,
-diff --git a/Trajectory_Transformer/scripts/train.py b/Trajectory_Transformer/scripts/train.py
-index 9a2273b..6ef5569 100644
---- a/Trajectory_Transformer/scripts/train.py
-+++ b/Trajectory_Transformer/scripts/train.py
-@@ -15,7 +15,7 @@ os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
- os.environ["CUDA_VISIBLE_DEVICES"] = '2'
- 
- class Parser(utils.Parser):
--    dataset: str = 'forex-v0'
-+    dataset: str = 'stocks-v0_r'
-     config: str = 'config.offline'
- 
- #######################
-@@ -111,7 +111,7 @@ trainer = trainer_config()
- 
- ## scale number of epochs to keep number of updates constant
- #n_epochs = int(1e6 / len(dataset) * args.n_epochs_ref)
--n_epochs = 3000
-+n_epochs = 5000
- save_freq = int(n_epochs // args.n_saves)
- 
- for epoch in range(n_epochs):
-diff --git a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl b/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl
-index 506330f..e08063c 100644
-Binary files a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl and b/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl differ
-diff --git a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-index bbd08e4..659bd84 100644
---- a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-+++ b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
-@@ -6,13 +6,13 @@ import matplotlib.pyplot as plt
- import numpy as np
- import pickle
- 
--quat_type = "forex-v0"
--env = gym.make('forex-v0', frame_bound=(50, 100), window_size=10)
-+quat_type = "stocks-v0"
-+env = gym.make('stocks-v0', frame_bound=(50, 100), window_size=10)
- # env = gym.make('stocks-v0', frame_bound=(50, 100), window_size=10)
- 
- action_dim = env.action_space.n
- 
--episode = 10
-+episode = 100
- T = 0
- episode_data = {}
- for k in ['observations', 'next_observations', 'actions', 'rewards', 'terminals']:
\ No newline at end of file
diff --git a/logs/stocks-v0_r/gpt/azure/model_config.pkl b/logs/stocks-v0_r/gpt/azure/model_config.pkl
deleted file mode 100644
index db868c9..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/model_config.pkl and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/state_0.pt b/logs/stocks-v0_r/gpt/azure/state_0.pt
deleted file mode 100644
index aaacded..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/state_0.pt and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/state_1666.pt b/logs/stocks-v0_r/gpt/azure/state_1666.pt
deleted file mode 100644
index c3fe2b4..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/state_1666.pt and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/state_3332.pt b/logs/stocks-v0_r/gpt/azure/state_3332.pt
deleted file mode 100644
index f13edba..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/state_3332.pt and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/state_4998.pt b/logs/stocks-v0_r/gpt/azure/state_4998.pt
deleted file mode 100644
index 5531c7d..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/state_4998.pt and /dev/null differ
diff --git a/logs/stocks-v0_r/gpt/azure/trainer_config.pkl b/logs/stocks-v0_r/gpt/azure/trainer_config.pkl
deleted file mode 100644
index 090ede9..0000000
Binary files a/logs/stocks-v0_r/gpt/azure/trainer_config.pkl and /dev/null differ