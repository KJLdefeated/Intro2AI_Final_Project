diff --git a/Trajectory_Transformer/config/offline.py b/Trajectory_Transformer/config/offline.py
index 98c4875..9a7a974 100644
--- a/Trajectory_Transformer/config/offline.py
+++ b/Trajectory_Transformer/config/offline.py
@@ -29,7 +29,7 @@ base = {
         'device': 'cuda',
 
         'n_embd': 32,
-        'batch_size': 256,
+        'batch_size': 64,
         'learning_rate': 6e-4,
         'lr_decay': True,
         'seed': 42,
diff --git a/Trajectory_Transformer/scripts/train.py b/Trajectory_Transformer/scripts/train.py
index 9a2273b..6ef5569 100644
--- a/Trajectory_Transformer/scripts/train.py
+++ b/Trajectory_Transformer/scripts/train.py
@@ -15,7 +15,7 @@ os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
 os.environ["CUDA_VISIBLE_DEVICES"] = '2'
 
 class Parser(utils.Parser):
-    dataset: str = 'forex-v0'
+    dataset: str = 'stocks-v0_r'
     config: str = 'config.offline'
 
 #######################
@@ -111,7 +111,7 @@ trainer = trainer_config()
 
 ## scale number of epochs to keep number of updates constant
 #n_epochs = int(1e6 / len(dataset) * args.n_epochs_ref)
-n_epochs = 3000
+n_epochs = 5000
 save_freq = int(n_epochs // args.n_saves)
 
 for epoch in range(n_epochs):
diff --git a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl b/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl
index 506330f..e08063c 100644
Binary files a/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl and b/Trajectory_Transformer/trajectory/datasets/Random/forex-v0_r.pkl differ
diff --git a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
index bbd08e4..659bd84 100644
--- a/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
+++ b/Trajectory_Transformer/trajectory/datasets/Random/gen_data.py
@@ -6,13 +6,13 @@ import matplotlib.pyplot as plt
 import numpy as np
 import pickle
 
-quat_type = "forex-v0"
-env = gym.make('forex-v0', frame_bound=(50, 100), window_size=10)
+quat_type = "stocks-v0"
+env = gym.make('stocks-v0', frame_bound=(50, 100), window_size=10)
 # env = gym.make('stocks-v0', frame_bound=(50, 100), window_size=10)
 
 action_dim = env.action_space.n
 
-episode = 10
+episode = 100
 T = 0
 episode_data = {}
 for k in ['observations', 'next_observations', 'actions', 'rewards', 'terminals']: